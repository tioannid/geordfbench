<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>gr.uoa.di.rdf</groupId>
        <artifactId>GeoRDFBench</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>RDF4JSUT</artifactId>
    <name>RDF4JSUT</name>
    <description>A client SUT for RDF4J</description>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>-->
        <junit-jupiter.version>5.8.1</junit-jupiter.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- setup BOM (Bill Of Materials) to avoid version mismatch and
                duplication of libraries in the classpath -->
                <groupId>org.eclipse.rdf4j</groupId>
                <artifactId>rdf4j-bom</artifactId>
                <version>${rdf4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>    
    </dependencyManagement>
           
    <dependencies>
        <!-- 1. RDF4J Dependencies -->
        <dependency>
            <!-- the RDF4J core framework -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-runtime</artifactId>
            <type>pom</type>
        </dependency>
        <dependency>
            <!-- ability to query RDF with the RDF4J framework -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-repository-sail</artifactId>
        </dependency>
        <dependency>
            <!-- in-memory storage backend module of RDF4J -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-memory</artifactId>
        </dependency>
        <dependency>
            <!-- persistent/native storage backend module of RDF4J -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-nativerdf</artifactId>
        </dependency>
        <dependency>
            <!-- Lucene backend module of RDF4J - Apache Lucene 5 searchIndex implementation -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-sail-lucene</artifactId>
        </dependency>
        <dependency>
            <!-- Turtle module of the RDF4J RIO parser -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-rio-turtle</artifactId>
        </dependency>
        <dependency>
            <!-- N-Triples module of the RDF4J RIO parser -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-rio-ntriples</artifactId>
        </dependency>
        <dependency>
            <!-- TRIG module of the RDF4J RIO parser -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-rio-trig</artifactId>
        </dependency>
        <dependency>
            <!--  GeoSparql support for RDF4J RIO parser -->
            <groupId>org.eclipse.rdf4j</groupId>
            <artifactId>rdf4j-queryalgebra-geosparql</artifactId>
        </dependency>
        <!-- a temporary fix according to Jeen Broekstra's suggestion is 
        to explicitly set spatial4j to 0.7 -->
        <!-- in rdf4j > v2.5.2 spatial4j is v0.7 therefore the following
        is not needed -->
        <!--
        <dependency>
            <groupId>org.locationtech.spatial4j</groupId>
            <artifactId>spatial4j</artifactId>
            <version>0.7</version>
        </dependency>
        -->
        <dependency>
            <groupId>gr.uoa.di.rdf</groupId>
            <artifactId>runtime</artifactId>
            <version>${gr.uoa.di.rdf.geordfbench.version}</version>
            <type>jar</type>
        </dependency>
        <!-- JUnit 5 Jupiter dependency -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <!--            <version>${junit-jupiter.version}</version>-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <!--            <version>${junit-jupiter.version}</version>-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <!--            <version>${junit-jupiter.version}</version>-->
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.17.0</version>
        </dependency>

    </dependencies>  
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>