extends ../layout

block content

    .container-fluid
        .row.justify-content-center
            .col-lg-10.col-xl-8
                .card.shadow-lg.border-0
                    .card-header.bg-gradient.bg-primary.text-white
                        .d-flex.align-items-center
                            i.bi.bi-server.fs-4.me-2
                            h3.mb-0 Create New Host Specification
                    .card-body.p-4

                        // Progress indicator
                        .progress.mb-4(style="height: 4px;")
                            .progress-bar.bg-primary(role="progressbar" style="width: 0%" id="progressBar")

                        form(name="hostform" method='POST' onsubmit='createHost(event)' novalidate)
                            
                            // Specification Name Section
                            .section-header.mb-3
                                h5.text-primary.mb-2
                                    i.bi.bi-tag.me-2
                                    | Host Identity
                                hr.text-primary
                            
                            .row.mb-3
                                .col-md-6
                                    .form-floating
                                        input(type="text" name="specName" id="specName" placeholder="Specification Name" required pattern="[a-zA-Z0-9_-]+" title="Only letters, numbers, underscores, and hyphens allowed").form-control.border-primary
                                        label(for="specName") 
                                            i.bi.bi-file-text.me-1
                                            | Specification Name *
                                        .invalid-feedback Please provide a valid specification name
                                        .form-text.text-muted This will be used as the filename (without .json extension)
                                .col-md-6
                                    .form-floating
                                        input(type="text" name="description" id="description" placeholder="Description").form-control.border-primary
                                        label(for="description")
                                            i.bi.bi-info-circle.me-1
                                            | Description
                                        .form-text.text-muted Optional description for this host

                            // Host Configuration Section
                            .section-header.mb-3.mt-4
                                h5.text-primary.mb-2
                                    i.bi.bi-server.me-2
                                    | Host Configuration
                                hr.text-primary
            
            .row.mb-3
                .col-md-6
                    .form-floating
                        input(type="text" name="name" id="name" placeholder="Host Name" required pattern="[a-zA-Z0-9_-]+" title="Only letters, numbers, underscores, and hyphens allowed").form-control.border-primary
                        label(for="name")
                            i.bi.bi-pc-display.me-1
                            | Host Name *
                        .invalid-feedback Please provide a valid host name
                        .form-text.text-muted Unique identifier for this host
                .col-md-6
                    .form-floating
                        input(type="text" name="classname" id="classname" placeholder="Class Name" value="gr.uoa.di.rdf.geordfbench.runtime.hosts.impl.SimpleHost" required readonly).form-control.border-primary
                        label(for="classname")
                            i.bi.bi-code-square.me-1
                            | Class Name *
                        .form-text.text-muted Java class for host implementation
            
            .row.mb-3
                .col-md-6
                    .form-floating
                        input(type="text" name="ipAddr" id="ipAddr" placeholder="IP Address" required pattern="^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$" title="Please enter a valid IP address").form-control.border-primary
                        label(for="ipAddr")
                            i.bi.bi-router.me-1
                            | IP Address *
                        .invalid-feedback Please provide a valid IP address (e.g., 192.168.1.100)
                        .form-text.text-muted Network address of the host
                .col-md-6
                    .form-floating
                        input(type="number" name="ram" id="ram" placeholder="RAM" value="16" min="1" max="1024" required).form-control.border-primary
                        label(for="ram")
                            i.bi.bi-memory.me-1
                            | RAM (GB) *
                        .invalid-feedback Please provide RAM between 1-1024 GB
                        .form-text.text-muted Available system memory
            
            h4.mt-4 Operating System Configuration
            .row.mt-2
                .col-md-6
                    .form-floating
                        select(name="osClassname" id="osClassname").form-select
                            option(value="gr.uoa.di.rdf.geordfbench.runtime.os.impl.UbuntuBionicOS") Ubuntu Bionic
                            option(value="gr.uoa.di.rdf.geordfbench.runtime.os.impl.UbuntuJammyOS") Ubuntu Jammy
                            option(value="gr.uoa.di.rdf.geordfbench.runtime.os.impl.CentOSOS") CentOS
                            option(value="gr.uoa.di.rdf.geordfbench.runtime.os.impl.WindowsOS") Windows
                        label(for="osClassname") OS Class Name
                .col-md-6
                    .form-floating
                        input(type="text" name="osName" id="osName" placeholder="osName" aria-label="osName" value="Ubuntu-bionic" ).form-control 
                        label(for="osName") OS Name
            
            .row.mt-2
                .col-md-4
                    .form-floating
                        input(type="text" name="shellCmd" id="shellCmd" placeholder="shellCmd" aria-label="shellCmd" value="/bin/sh" ).form-control 
                        label(for="shellCmd") Shell Command
                .col-md-4
                    .form-floating
                        input(type="text" name="syncCmd" id="syncCmd" placeholder="syncCmd" aria-label="syncCmd" value="sync" ).form-control 
                        label(for="syncCmd") Sync Command
                .col-md-4
                    .form-floating
                        input(type="text" name="clearCacheCmd" id="clearCacheCmd" placeholder="clearCacheCmd" aria-label="clearCacheCmd" value="sudo /sbin/sysctl vm.drop_caches=3" ).form-control 
                        label(for="clearCacheCmd") Clear Cache Command
            
            h4.mt-4 Directory Configuration
            .row.mt-2
                .col-md-4
                    .form-floating
                        input(type="text" name="sourceFileDir" id="sourceFileDir" placeholder="sourceFileDir" aria-label="sourceFileDir" ).form-control 
                        label(for="sourceFileDir") Source File Directory
                .col-md-4
                    .form-floating
                        input(type="text" name="reposBaseDir" id="reposBaseDir" placeholder="reposBaseDir" aria-label="reposBaseDir" ).form-control 
                        label(for="reposBaseDir") Repositories Base Directory
                .col-md-4
                    .form-floating
                        input(type="text" name="reportsBaseDir" id="reportsBaseDir" placeholder="reportsBaseDir" aria-label="reportsBaseDir" ).form-control 
                        label(for="reportsBaseDir") Reports Base Directory
            
            .row.mt-3.justify-content-center
                .col-2
                    button(type="submit").btn.btn-primary Create
                .col-2
                    a(href="/hosts").btn.btn-secondary Cancel

    script.
        async function createHost(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            
            const data = {
                classname: formData.get('classname'),
                name: formData.get('name'),
                ipAddr: formData.get('ipAddr'),
                ram: parseInt(formData.get('ram')),
                os: {
                    classname: formData.get('osClassname'),
                    name: formData.get('osName'),
                    shell_cmd: formData.get('shellCmd'),
                    sync_cmd: formData.get('syncCmd'),
                    clearcache_cmd: formData.get('clearCacheCmd')
                },
                sourceFileDir: formData.get('sourceFileDir'),
                reposBaseDir: formData.get('reposBaseDir'),
                reportsBaseDir: formData.get('reportsBaseDir')
            };
            
            try {
                const response = await fetch(`#{locals.postBaseUrl}/${data.name}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    alert('Host specification created successfully!');
                    window.location.href = '/hosts';
                } else {
                    const error = await response.json();
                    alert('Error creating host specification: ' + JSON.stringify(error));
                }
            } catch (error) {
                alert('Error creating host specification: ' + error.message);
            }
        }