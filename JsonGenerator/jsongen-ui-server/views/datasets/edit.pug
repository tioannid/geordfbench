extends ../layout

block content

    .container 

        form(name="editform" method='POST' onsubmit='updateDataset(event)').col-8
            h1.h3.mb-3.fw-normal Edit Dataset: #{locals.spec}
            
            .row.mt-2
                .col-md-6
                    .form-floating
                        input(type="text" name="name" id="name" placeholder="name" aria-label="name" value=`${locals.data.name}` ).form-control 
                        label(for="name") Name
                .col-md-6
                    .form-floating
                        input(type="text" name="classname" id="classname" placeholder="classname" aria-label="classname" value=`${locals.data.classname}` ).form-control 
                        label(for="classname") Class Name
            
            .row.mt-2
                .col-md-6
                    .form-floating
                        input(type="text" name="relativeBaseDir" id="relativeBaseDir" placeholder="relativeBaseDir" aria-label="relativeBaseDir" value=`${locals.data.relativeBaseDir}` ).form-control 
                        label(for="relativeBaseDir") Relative Base Directory
                .col-md-6
                    .form-floating
                        input(type="number" name="n" id="n" placeholder="n" aria-label="n" value=`${locals.data.n}` ).form-control 
                        label(for="n") N Value
            
            h4.mt-4 Simple Geospatial Dataset
            - var simpleDataset = locals.data.simpleGeospatialDataSetList[0]
            .row.mt-2
                .col-md-6
                    .form-floating
                        input(type="text" name="simpleDatasetName" id="simpleDatasetName" placeholder="simpleDatasetName" aria-label="simpleDatasetName" value=`${simpleDataset.name}` ).form-control 
                        label(for="simpleDatasetName") Simple Dataset Name
                .col-md-6
                    .form-floating
                        input(type="text" name="simpleRelativeBaseDir" id="simpleRelativeBaseDir" placeholder="simpleRelativeBaseDir" aria-label="simpleRelativeBaseDir" value=`${simpleDataset.relativeBaseDir}` ).form-control 
                        label(for="simpleRelativeBaseDir") Simple Relative Base Dir
            
            .row.mt-2
                .col-md-6
                    .form-floating
                        input(type="text" name="dataFile" id="dataFile" placeholder="dataFile" aria-label="dataFile" value=`${simpleDataset.dataFile}` ).form-control 
                        label(for="dataFile") Data File
                .col-md-6
                    .form-floating
                        select(name="rdfFormat" id="rdfFormat").form-select
                            option(value="N-TRIPLES" selected=(simpleDataset.rdfFormat === "N-TRIPLES")) N-TRIPLES
                            option(value="TURTLE" selected=(simpleDataset.rdfFormat === "TURTLE")) TURTLE
                            option(value="RDF/XML" selected=(simpleDataset.rdfFormat === "RDF/XML")) RDF/XML
                            option(value="JSON-LD" selected=(simpleDataset.rdfFormat === "JSON-LD")) JSON-LD
                        label(for="rdfFormat") RDF Format
            
            h5.mt-3 Namespace Prefixes
            .row.mt-2
                .col-md-12
                    .form-floating
                        textarea(name="namespacePrefixes" id="namespacePrefixes" rows="6" placeholder="Enter namespace prefixes as JSON").form-control
                        label(for="namespacePrefixes") Namespace Prefixes (JSON format)
            
            .row.mt-3.justify-content-center
                .col-2
                    button(type="submit").btn.btn-primary Update
                .col-2
                    a(href="/datasets").btn.btn-secondary Cancel

    script.
        // Set current namespace prefixes
        document.getElementById('namespacePrefixes').value = JSON.stringify(!{JSON.stringify(simpleDataset.mapUsefulNamespacePrefixes)}, null, 2);

        async function updateDataset(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            
            // Parse namespace prefixes
            let namespacePrefixes;
            try {
                namespacePrefixes = JSON.parse(formData.get('namespacePrefixes'));
            } catch (e) {
                alert('Invalid JSON format for namespace prefixes');
                return;
            }
            
            const data = {
                classname: formData.get('classname'),
                name: formData.get('name'),
                relativeBaseDir: formData.get('relativeBaseDir'),
                simpleGeospatialDataSetList: [{
                    name: formData.get('simpleDatasetName'),
                    relativeBaseDir: formData.get('simpleRelativeBaseDir'),
                    dataFile: formData.get('dataFile'),
                    rdfFormat: formData.get('rdfFormat'),
                    mapUsefulNamespacePrefixes: namespacePrefixes
                }],
                mapDataSetContexts: !{JSON.stringify(locals.data.mapDataSetContexts)},
                n: parseInt(formData.get('n'))
            };
            
            try {
                const response = await fetch(`#{locals.putBaseUrl}/#{locals.spec}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    alert('Dataset updated successfully!');
                    window.location.href = '/datasets';
                } else {
                    const error = await response.json();
                    alert('Error updating dataset: ' + JSON.stringify(error));
                }
            } catch (error) {
                alert('Error updating dataset: ' + error.message);
            }
        }
